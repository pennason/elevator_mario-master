server:
  #  port: 8012
  port: 8080
  servlet:
    context-path: /applets

eureka:
  client:
    service-url:
      defaultZone: http://shmashine-eureka:8080/eureka/
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    # 优先使用IP地址方式进行注册服务
    prefer-ip-address: true

ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 5000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 3000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1

# sa-token 配置
sa-token:
  # 配置 Sa-Token 单独使用的 Redis 连接
  alone-redis:
    database: 13  # 默认13
    host: 10.0.0.113
    port: 6379
    password: shmashine@666
    timeout: 5000

spring:
  application:
    name: shmashine-applets
  profiles:
    active: dev

  redis:
    database: 2
    host: redis
    port: 6379
    password: shmashine@666
    timeout: 5000

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql.dev.shmashine.com:3306/elevator_master?useSSL=false&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: shmashine@666
    initialSize: 1
    minIdle: 3
    maxActive: 200
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sqla's无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
    #单个文件最大大小
  boot:
    admin:
      client:
        url: http://spring-boot-admin:8080/
        username: shmashine
        password: shmashine
        instance:
          service-url: http://shmashine-applets:8080/applets

mybatis-plus:
  mapper-locations: mapper/*.xml
  type-aliases-package: com.shmashine.UserClientApplets.entity
  configuration:
    map-underscore-to-camel-case: true    #开启驼峰功能
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
  global-config:
    db-config:
      update-strategy: NOT_EMPTY # 更新时，只更新非空字段
      insert-strategy: NOT_EMPTY # 新增时，只新增非空字段
      id-type: auto   #id自增长
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  page-size-zero: true
  row-bound-with-count: false
  # params: count=countSql

#logging:
#  level:
#    com.shmashine: info

shmashine:
  sms:
    accessKeyID: LTAI2xpuWnJLsOAu # 你自己的accessKeyId
    accessKeySecret: WbUEGgRAf4Qf1eVigywknIUfMRBslD # 你自己的AccessKeySecret
    signName: 上海麦信数据科技有限公司 # 签名名称
    verifyCodeTemplate: SMS_155780018 # 模板名称
    domain: dysmsapi.aliyuncs.com # 域名
    action: SendSMS # API类型，发送短信
    version: 2017-05-25 # API版本，固定值
    regionID: cn-hangzhou # 区域id

feign:
  client:
    config:
      default:
        read-timeout: 6000
        connect-timeout: 6000

endpoint:
  shmashine-api: http://shmashine-api:8080

# 监控信息
management:
  endpoints:
    web:
      exposure:
        #        include: "health,prometheus,httptrace"
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
      probes:
        enabled: true
      group:
        readiness:
          include: db
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

springdoc:
  swagger-ui:
    enabled: true
  api-docs:
    enabled: true

--- #################### 微信公众号相关配置 ####################
wx:
  official:
    # 公众号配置(必填)
    app-id: wx041349c6f39b268b
    secret: 5abee519483bc9f8cb37ce280e814bd0