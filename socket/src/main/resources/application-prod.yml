# 设备连接端口
netty:
  cube:
    port: 27500
  car_roof:
    port: 27600
  car_roof_tls:
    port: 27610
  motor_port:
    port: 27700
  motor_port_tls:
    port: 27710
  front:
    port: 27800
  SingleBox:
    port: 27900
  SingleBox_tls:
    port: 27910
  escalator:
    port: 28000
  CarDoor:
    port: 28010

# kafka topic 名称
kafka:
  topic:
    consumer:
      nettyTopic: pro_web_nezha
    producer:
      monitor: pro_oreo_monitor
      mergeMonitor: cube_report_merge_monitor
      fault: pro_oreo_fault
      preFault: pro_oreo_preFault
      tr: pro_oreo_tr
      http: pro_netty_nezha
      event: pro_oreo_event
      detectedPeopleNums: pro_people_flow_statistics
      cubeMonitor: cube_monitor
      cubeTr: cube_tr
      cubeEvent: cube_event
      cubeFault: cube_fault
      cubeTrapped: cube_trapped
      cubeOnlineOffline: cube_online_offline

# sa-token 配置
sa-token:
  # 配置 Sa-Token 单独使用的 Redis 连接
  alone-redis:
    database: 13  # 默认13
    host: redis.tech.internal.shmashine.com
    port: 6379
    password: shmashine@666
    timeout: 5000

eureka:
  client:
    service-url:
      defaultZone: http://172.31.183.101:8008/eureka/
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    # 优先使用IP地址方式进行注册服务
    prefer-ip-address: true

spring:
  data:
    mongodb:
      host: mongo.tech.internal.shmashine.com
      port: 27017
      database: MX
      username: shmashine
      password: Shmashine@666
  redis:
    database: 2
    host: redis.tech.internal.shmashine.com
    port: 6379
    password: shmashine@666
    timeout: 5000
  datasource:
    oreo:
      type: com.alibaba.druid.pool.DruidDataSource
      driverClassName: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://rm-m5e5x3037x8bn5br6.mysql.rds.aliyuncs.com:3306/elevator_master?useSSL=false&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
      username: elevator_master
      password: Shmash1ne@elevator_master
    nezha:
      type: com.alibaba.druid.pool.DruidDataSource
      driverClassName: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://rm-m5e5x3037x8bn5br6.mysql.rds.aliyuncs.com/elevator_nezha?useSSL=false&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Hongkong
      username: elevator_master
      password: Shmash1ne@elevator_master

  kafka:
    producer:
      #bootstrap-servers: kafka:9092
      bootstrap-servers: kafka.pro.internal.shmashine.com:29092
      retries: 0
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        security.protocol: SASL_PLAINTEXT
        sasl.mechanism: PLAIN
        sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="producer" password="secret20190219";
    consumer:
      #bootstrap-servers: kafka:9092
      bootstrap-servers: kafka.pro.internal.shmashine.com:29092
      group-id: oreo-socket-group-47
      auto-offset-reset: latest
      enable-auto-commit: true
      auto-commit-interval: 100
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        security.protocol: SASL_PLAINTEXT
        sasl.mechanism: PLAIN
        sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="producer" password="secret20190219";

  boot:
    admin:
      client:
        url: http://172.31.183.101:9999 #配置admin-server地址
        username: shmashine
        password: shmashine
        instance:
          service-url: http://172.31.183.100:8002
