<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!-- Copyright (C) 2022 Shmashine Holding Ltd. All Rights Reserved. -->

<module name="Checker">
    <property name="charset" value="UTF-8"/>

    <property name="severity" value="error"/>

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Headers Begin -->
    <!-- See https://checkstyle.sourceforge.io/config_header.html -->
    <!--    <module name="RegexpHeader">-->
    <!--        <property name="header" value="Copyright \(C\) \d{4} Shmashine Holding Ltd. All Rights Reserved.$"/>-->
    <!--    </module>-->
    <!-- Headers End -->

    <!-- Miscellaneous Begin -->
    <!-- See https://checkstyle.sourceforge.io/config_misc.html -->
    <module name="UniqueProperties"/>
    <!-- Miscellaneous End -->


    <!-- Size Violations Begin -->
    <!-- See https://checkstyle.sourceforge.io/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="3000"/>
    </module>
    <module name="LineLength">
        <property name="max" value="120"/>
        <!-- Ignore all imports -->
        <property name="ignorePattern" value="^import "/>
    </module>
    <!-- Size Violations End -->

    <!-- Whitespace Begin -->
    <!-- See https://checkstyle.sourceforge.io/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>
    <!-- Whitespace End -->

    <module name="TreeWalker">

        <!-- Annotations Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_annotation.html -->
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationMostCases"/>
            <property name="tokens"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationVariables"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="AnnotationLocation"/>
        <module name="MissingOverride"/>
        <!-- Make the @SuppressWarnings annotations available to Checkstyle -->
        <module name="SuppressWarningsHolder"/>
        <!-- Annotations End -->

        <!-- Block Checks Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>
        <module name="LeftCurly"/>
        <module name="RightCurly">
            <property name="id" value="RightCurlySame"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,
                    LITERAL_DO"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens"
                      value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,
                    INSTANCE_INIT"/>
        </module>
        <module name="NeedBraces"/>
        <!-- Block Checks End -->

        <!-- Class Design Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_design.html -->
        <module name="InterfaceIsType"/>
        <!--        <module name="MutableException"/>-->
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount"/>
        <!-- Class Design End -->

        <!-- Coding Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_coding.html -->
        <!--        <module name="AvoidDoubleBraceInitialization"/>-->
        <module name="AvoidNoArgumentSuperConstructorCall"/>
        <module name="CovariantEquals"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="FallThrough"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format"
                      value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message"
                      value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <!--        <module name="ParameterAssignment"/>-->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <!--        <module name="UnnecessaryParentheses"/>-->
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="VariableDeclarationUsageDistance"/>
        <!-- Coding End -->

        <!-- Imports Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_imports.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="ImportOrder">
            <property name="groups" value="java,javax,jakarta,org,cn,com"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="TOP"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <!-- Imports End -->

        <!-- Javadoc Comments Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_javadoc.html -->
        <module name="JavadocParagraph">
            <property name="allowNewlineParagraph" value="false"/>
        </module>
        <module name="JavadocStyle">
            <property name="checkFirstSentence" value="false"/>
        </module>
        <module name="JavadocTagContinuationIndentation"/>

        <module name="JavadocType">
            <property name="scope" value="public"/>
        </module>
        <module name="MissingJavadocType"/>
        <module name="NonEmptyAtclauseDescription"/>
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module>
        <module name="SummaryJavadoc">
            <property name="period" value=""/>
        </module>
        <!-- Javadoc Comments End -->

        <!-- Metrics Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_metrics.html -->
        <module name="BooleanExpressionComplexity">
            <property name="max" value="7"/>
        </module>
        <!--        <module name="ClassDataAbstractionCoupling">-->
        <!--            <property name="excludeClassesRegexps" value=".*Response$,.*Request$"/>-->
        <!--        </module>-->
        <!--        <module name="ClassFanOutComplexity">-->
        <!--            <property name="excludeClassesRegexps" value=".*Response$,.*Request$"/>-->
        <!--        </module>-->
        <module name="CyclomaticComplexity"/>
        <!--        <module name="JavaNCSS"/>-->
        <!-- Metrics End -->

        <!-- Miscellaneous Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="8"/>
            <property name="lineWrappingIndentation" value="8"/>
            <property name="arrayInitIndent" value="4"/>
        </module>
        <module name="OuterTypeFilename"/>
        <module name="UpperEll"/>
        <!-- Miscellaneous End -->

        <!-- Modifiers Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_modifier.html -->
        <module name="ModifierOrder"/>
        <!-- Modifiers End -->

        <!-- Naming Conventions Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_naming.html -->
        <!--        <module name="AbbreviationAsWordInName">-->
        <!--            <property name="ignoreFinal" value="false"/>-->
        <!--            <property name="allowedAbbreviationLength" value="1"/>-->
        <!--        </module>-->
        <module name="CatchParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <!--        <module name="ClassTypeParameterName">-->
        <!--            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>-->
        <!--            <message key="name.invalidPattern"-->
        <!--                     value="Class type name ''{0}'' must match pattern ''{1}''."/>-->
        <!--        </module>-->
        <module name="ConstantName"/>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Interface type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Lambda parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LocalVariableName">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Member name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern"
                     value="Method name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Method type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <!--<module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>-->
        <!--<module name="ParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>-->
        <module name="TypeName">
            <message key="name.invalidPattern"
                     value="Type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <!-- Naming Conventions End -->

        <!-- Size Violations Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_sizes.html -->
        <module name="AnonInnerLength"/>
        <!--        <module name="ExecutableStatementCount"/>-->
        <module name="MethodCount"/>
        <module name="MethodLength">
            <property name="max" value="200"/>
        </module>
        <module name="OuterTypeNumber"/>
        <module name="ParameterNumber">
            <property name="max" value="12"/>
        </module>
        <!-- Size Violations End -->

        <!-- Whitespace Begin -->
        <!-- See https://checkstyle.sourceforge.io/config_whitespace.html -->
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens"
                      value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,
                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
            <property name="id" value="SeparatorWrapEllipsis"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 -->
            <property name="id" value="SeparatorWrapArrayDeclarator"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapMethodRef"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="ignoreEnhancedForColon" value="false"/>
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <message key="ws.notPreceded"
                     value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>
        <!-- Whitespace End -->

        <module name="SuppressionCommentFilter"/>
    </module>

    <module name="SuppressWarningsFilter"/>

    <!--文件排除代码检测-->
    <module name="SuppressionFilter">
        <property name="file" value="checkstyle-suppressions.xml"/>
    </module>
</module>
