variables:
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_CHECKSTYLE_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
  #    -Djava.awt.headless=true

  # As of Maven 3.3.0 instead of this you MAY define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # As of Maven 3.6.1, the use of `--no-tranfer-progress` (or `-ntp`) suppresses download and upload messages. The use
  # of the `Slf4jMavenTransferListener` is no longer necessary.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_BUILD_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -DinstallAtEnd=false
    -DdeployAtEnd=false

# This template uses the latest Maven 3 release, e.g., 3.8.6, and OpenJDK 8 (LTS)
# for verifying and deploying images
# Maven 3.8.x REQUIRES HTTPS repositories.
# See https://maven.apache.org/docs/3.8.1/release-notes.html#how-to-fix-when-i-get-a-http-repository-blocked for more.
image: maven:3.9.9

before_script :
  - if [ -n "${DEBUG}" ]; then env; fi

cache:
  key: $CI_PROJECT_DIR
  paths:
    - $CI_PROJECT_DIR/.m2/repository

stages:
  - checkstyle

checkstyle:jdk21:
  stage: checkstyle
  tags:
    - docker-shared
  script:
    - if [ ! -f ci_settings.xml ]; then
      echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/packages/maven_repository/index.html#create-maven-packages-with-gitlab-cicd for instructions.";
      exit 1;
      fi
    #- 'echo "$CI_COMMIT_MESSAGE"'
    #- if [[ "$CI_COMMIT_MESSAGE" =~ \[skip\[([^]]*)+\]\] ]]; then
    #  matched_pattern="${BASH_REMATCH[1]}"
    #  fi
    - if [[ "$CI_COMMIT_MESSAGE" =~ "skip" && "$CI_COMMIT_MESSAGE" =~ "all" ]]; then
        echo "忽略代码检测";
        exit 0;
      fi
    - mavenOptions=""
    - if [[ "$CI_COMMIT_MESSAGE" =~ "skip" ]]; then
        if [[ "$CI_COMMIT_MESSAGE" =~ "test" ]]; then
          mavenOptions+=" -Dmaven.test.skip=true -DtestSkip=true";
        fi;
        if [[ "$CI_COMMIT_MESSAGE" =~ "checkstyle" ]]; then
          mavenOptions+=" -Dcheckstyle.skip=true";
        fi;
      fi
    - 'mvn -U clean package $MAVEN_CHECKSTYLE_OPTS $mavenOptions --settings ci_settings.xml'
    - if [ $? -ne 0 ]; then
        echo "Maven 打包失败!";
        exit 1;
      fi
    - 'mvn verify $MAVEN_BUILD_OPTS $mavenOptions --settings ci_settings.xml'
    - if [ $? -ne 0 ]; then
        echo "Maven 验证失败!";
        exit 1;
      fi
    - 'echo "检测通过, 请按下面流程操作"'
    - 'echo "1. 合并到“beta*”分支， 系统会自动部署测试环境（htt://jenkins.dev.tech.shmashine.com），请通知测试"'
    - 'echo "2. 等待测试验收"'
    - 'echo "3. 测试通过后需手动合并到master分支，并打上标签"'
    - 'echo "4. 使用对应标签发布正式环境"'
  only:
    - pushes
  except:
    - master
    - tags
    - /^beta.*$/
    - /^release.*$/
    - merge_requests
